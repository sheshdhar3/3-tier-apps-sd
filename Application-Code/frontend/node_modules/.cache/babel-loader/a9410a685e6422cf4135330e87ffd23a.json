{"ast":null,"code":"import _classCallCheck from\"/home/TWSThreeTierAppChallenge/Application-Code/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/TWSThreeTierAppChallenge/Application-Code/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/TWSThreeTierAppChallenge/Application-Code/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/TWSThreeTierAppChallenge/Application-Code/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import Tasks from\"./Tasks\";import{Paper,TextField,Checkbox,Button}from\"@material-ui/core\";import\"./App.css\";// Update your CSS file accordingly\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Tasks){_inherits(App,_Tasks);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={tasks:[],currentTask:\"\"};return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,tasks=_this$state.tasks,currentTask=_this$state.currentTask;return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"app-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"My To-Do List\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"main-content\",children:/*#__PURE__*/_jsxs(Paper,{elevation:3,className:\"todo-container\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.handleSubmit,className:\"task-form\",children:[/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",size:\"small\",className:\"task-input\",value:currentTask,required:true,onChange:this.handleChange,placeholder:\"Add New TO-DO\"}),/*#__PURE__*/_jsx(Button,{className:\"add-task-btn\",color:\"primary\",variant:\"outlined\",type:\"submit\",children:\"Add Task\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"tasks-list\",children:tasks.map(function(task){return/*#__PURE__*/_jsxs(Paper,{className:\"task-item\",children:[/*#__PURE__*/_jsx(Checkbox,{checked:task.completed,onClick:function onClick(){return _this2.handleUpdate(task._id);},color:\"primary\"}),/*#__PURE__*/_jsx(\"div\",{className:task.completed?\"task-text completed\":\"task-text\",children:task.task}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return _this2.handleDelete(task._id);},color:\"secondary\",className:\"delete-task-btn\",children:\"Delete\"})]},task._id);})})]})})]});}}]);return App;}(Tasks);export default App;","map":{"version":3,"sources":["/home/TWSThreeTierAppChallenge/Application-Code/frontend/src/App.js"],"names":["React","Tasks","Paper","TextField","Checkbox","Button","App","state","tasks","currentTask","handleSubmit","handleChange","map","task","completed","handleUpdate","_id","handleDelete"],"mappings":"4qBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,KAAT,CAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,MAArC,KAAmD,mBAAnD,CACA,MAAO,WAAP,CAAoB;2FAEdC,CAAAA,G,uSACFC,K,CAAQ,CAAEC,KAAK,CAAE,EAAT,CAAaC,WAAW,CAAE,EAA1B,C,qDAER,iBAAS,iBACL,gBAA+B,KAAKF,KAApC,CAAQC,KAAR,aAAQA,KAAR,CAAeC,WAAf,aAAeA,WAAf,CACA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,eAAQ,SAAS,CAAC,YAAlB,uBACI,qCADJ,EADJ,cAII,YAAK,SAAS,CAAC,cAAf,uBACI,MAAC,KAAD,EAAO,SAAS,CAAE,CAAlB,CAAqB,SAAS,CAAC,gBAA/B,wBACI,cAAM,QAAQ,CAAE,KAAKC,YAArB,CAAmC,SAAS,CAAC,WAA7C,wBACI,KAAC,SAAD,EACI,OAAO,CAAC,UADZ,CAEI,IAAI,CAAC,OAFT,CAGI,SAAS,CAAC,YAHd,CAII,KAAK,CAAED,WAJX,CAKI,QAAQ,CAAE,IALd,CAMI,QAAQ,CAAE,KAAKE,YANnB,CAOI,WAAW,CAAC,eAPhB,EADJ,cAUI,KAAC,MAAD,EAAQ,SAAS,CAAC,cAAlB,CAAiC,KAAK,CAAC,SAAvC,CAAiD,OAAO,CAAC,UAAzD,CAAoE,IAAI,CAAC,QAAzE,sBAVJ,GADJ,cAeI,YAAK,SAAS,CAAC,YAAf,UACKH,KAAK,CAACI,GAAN,CAAU,SAACC,IAAD,qBACP,MAAC,KAAD,EAAsB,SAAS,CAAC,WAAhC,wBACI,KAAC,QAAD,EACI,OAAO,CAAEA,IAAI,CAACC,SADlB,CAEI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACC,YAAL,CAAkBF,IAAI,CAACG,GAAvB,CAAN,EAFb,CAGI,KAAK,CAAC,SAHV,EADJ,cAMI,YAAK,SAAS,CAAEH,IAAI,CAACC,SAAL,CAAiB,qBAAjB,CAAyC,WAAzD,UACKD,IAAI,CAACA,IADV,EANJ,cASI,KAAC,MAAD,EAAQ,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACI,YAAL,CAAkBJ,IAAI,CAACG,GAAvB,CAAN,EAAjB,CAAoD,KAAK,CAAC,WAA1D,CAAsE,SAAS,CAAC,iBAAhF,oBATJ,GAAYH,IAAI,CAACG,GAAjB,CADO,EAAV,CADL,EAfJ,GADJ,EAJJ,GADJ,CA0CH,C,iBA/Caf,K,EAkDlB,cAAeK,CAAAA,GAAf","sourcesContent":["import React from \"react\";\nimport Tasks from \"./Tasks\";\nimport { Paper, TextField, Checkbox, Button } from \"@material-ui/core\";\nimport \"./App.css\"; // Update your CSS file accordingly\n\nclass App extends Tasks {\n    state = { tasks: [], currentTask: \"\" };\n\n    render() {\n        const { tasks, currentTask } = this.state;\n        return (\n            <div className=\"app\">\n                <header className=\"app-header\">\n                    <h1>My To-Do List</h1>\n                </header>\n                <div className=\"main-content\">\n                    <Paper elevation={3} className=\"todo-container\">\n                        <form onSubmit={this.handleSubmit} className=\"task-form\">\n                            <TextField\n                                variant=\"outlined\"\n                                size=\"small\"\n                                className=\"task-input\"\n                                value={currentTask}\n                                required={true}\n                                onChange={this.handleChange}\n                                placeholder=\"Add New TO-DO\"\n                            />\n                            <Button className=\"add-task-btn\" color=\"primary\" variant=\"outlined\" type=\"submit\">\n                                Add Task\n                            </Button>\n                        </form>\n                        <div className=\"tasks-list\">\n                            {tasks.map((task) => (\n                                <Paper key={task._id} className=\"task-item\">\n                                    <Checkbox\n                                        checked={task.completed}\n                                        onClick={() => this.handleUpdate(task._id)}\n                                        color=\"primary\"\n                                    />\n                                    <div className={task.completed ? \"task-text completed\" : \"task-text\"}>\n                                        {task.task}\n                                    </div>\n                                    <Button onClick={() => this.handleDelete(task._id)} color=\"secondary\" className=\"delete-task-btn\">\n                                        Delete\n                                    </Button>\n                                </Paper>\n                            ))}\n                        </div>\n                    </Paper>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}