{"ast":null,"code":"var _jsxFileName = \"/home/TWSThreeTierAppChallenge/Application-Code/frontend/src/App.js\";\nimport React from \"react\";\nimport Tasks from \"./Tasks\";\nimport { Paper, TextField, Checkbox, Button } from \"@material-ui/core\";\nimport \"./App.css\"; // Update your CSS file accordingly\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Tasks {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      currentTask: \"\"\n    };\n  }\n\n  render() {\n    const {\n      tasks,\n      currentTask\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"app-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My To-Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          className: \"todo-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            className: \"task-form\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              size: \"small\",\n              className: \"task-input\",\n              value: currentTask,\n              required: true,\n              onChange: this.handleChange,\n              placeholder: \"Add New TO-DO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"add-task-btn\",\n              color: \"primary\",\n              variant: \"outlined\",\n              type: \"submit\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tasks-list\",\n            children: tasks.map(task => /*#__PURE__*/_jsxDEV(Paper, {\n              className: \"task-item\",\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: task.completed,\n                onClick: () => this.handleUpdate(task._id),\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: task.completed ? \"task-text completed\" : \"task-text\",\n                children: task.task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => this.handleDelete(task._id),\n                color: \"secondary\",\n                className: \"delete-task-btn\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, this)]\n            }, task._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/TWSThreeTierAppChallenge/Application-Code/frontend/src/App.js"],"names":["React","Tasks","Paper","TextField","Checkbox","Button","App","state","tasks","currentTask","render","handleSubmit","handleChange","map","task","completed","handleUpdate","_id","handleDelete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,mBAAnD;AACA,OAAO,WAAP,C,CAAoB;;;;AAEpB,MAAMC,GAAN,SAAkBL,KAAlB,CAAwB;AAAA;AAAA;AAAA,SACpBM,KADoB,GACZ;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,WAAW,EAAE;AAA1B,KADY;AAAA;;AAGpBC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyB,KAAKF,KAApC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,SAAS,EAAE,CAAlB;AAAqB,UAAA,SAAS,EAAC,gBAA/B;AAAA,kCACI;AAAM,YAAA,QAAQ,EAAE,KAAKI,YAArB;AAAmC,YAAA,SAAS,EAAC,WAA7C;AAAA,oCACI,QAAC,SAAD;AACI,cAAA,OAAO,EAAC,UADZ;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,SAAS,EAAC,YAHd;AAII,cAAA,KAAK,EAAEF,WAJX;AAKI,cAAA,QAAQ,EAAE,IALd;AAMI,cAAA,QAAQ,EAAE,KAAKG,YANnB;AAOI,cAAA,WAAW,EAAC;AAPhB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAUI,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,cAAlB;AAAiC,cAAA,KAAK,EAAC,SAAvC;AAAiD,cAAA,OAAO,EAAC,UAAzD;AAAoE,cAAA,IAAI,EAAC,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAeI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,sBACKJ,KAAK,CAACK,GAAN,CAAWC,IAAD,iBACP,QAAC,KAAD;AAAsB,cAAA,SAAS,EAAC,WAAhC;AAAA,sCACI,QAAC,QAAD;AACI,gBAAA,OAAO,EAAEA,IAAI,CAACC,SADlB;AAEI,gBAAA,OAAO,EAAE,MAAM,KAAKC,YAAL,CAAkBF,IAAI,CAACG,GAAvB,CAFnB;AAGI,gBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI;AAAK,gBAAA,SAAS,EAAEH,IAAI,CAACC,SAAL,GAAiB,qBAAjB,GAAyC,WAAzD;AAAA,0BACKD,IAAI,CAACA;AADV;AAAA;AAAA;AAAA;AAAA,sBANJ,eASI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,MAAM,KAAKI,YAAL,CAAkBJ,IAAI,CAACG,GAAvB,CAAvB;AAAoD,gBAAA,KAAK,EAAC,WAA1D;AAAsE,gBAAA,SAAS,EAAC,iBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ;AAAA,eAAYH,IAAI,CAACG,GAAjB;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0CH;;AA/CmB;;AAkDxB,eAAeX,GAAf","sourcesContent":["import React from \"react\";\nimport Tasks from \"./Tasks\";\nimport { Paper, TextField, Checkbox, Button } from \"@material-ui/core\";\nimport \"./App.css\"; // Update your CSS file accordingly\n\nclass App extends Tasks {\n    state = { tasks: [], currentTask: \"\" };\n\n    render() {\n        const { tasks, currentTask } = this.state;\n        return (\n            <div className=\"app\">\n                <header className=\"app-header\">\n                    <h1>My To-Do List</h1>\n                </header>\n                <div className=\"main-content\">\n                    <Paper elevation={3} className=\"todo-container\">\n                        <form onSubmit={this.handleSubmit} className=\"task-form\">\n                            <TextField\n                                variant=\"outlined\"\n                                size=\"small\"\n                                className=\"task-input\"\n                                value={currentTask}\n                                required={true}\n                                onChange={this.handleChange}\n                                placeholder=\"Add New TO-DO\"\n                            />\n                            <Button className=\"add-task-btn\" color=\"primary\" variant=\"outlined\" type=\"submit\">\n                                Add Task\n                            </Button>\n                        </form>\n                        <div className=\"tasks-list\">\n                            {tasks.map((task) => (\n                                <Paper key={task._id} className=\"task-item\">\n                                    <Checkbox\n                                        checked={task.completed}\n                                        onClick={() => this.handleUpdate(task._id)}\n                                        color=\"primary\"\n                                    />\n                                    <div className={task.completed ? \"task-text completed\" : \"task-text\"}>\n                                        {task.task}\n                                    </div>\n                                    <Button onClick={() => this.handleDelete(task._id)} color=\"secondary\" className=\"delete-task-btn\">\n                                        Delete\n                                    </Button>\n                                </Paper>\n                            ))}\n                        </div>\n                    </Paper>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}